name: Deploy Minecraft Server

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: false
        default: ""

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare variables
        id: prep
        run: |
          BRANCH_INPUT="${{ github.event.inputs.branch }}"
          if [ -z "$BRANCH_INPUT" ]; then
            echo "branch=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          else
            echo "branch=$BRANCH_INPUT" >> "$GITHUB_OUTPUT"
          fi
          echo "repo_ssh=git@github.com:${{ github.repository }}.git" >> "$GITHUB_OUTPUT"

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          envs: |
            REMOTE_APP_DIR,MINECRAFT_DIR,POSTGRES_USER,POSTGRES_DB,POSTGRES_PASSWORD,REDIS_PASSWORD,GIT_REPO,GIT_BRANCH
          env:
            REMOTE_APP_DIR: ${{ secrets.REMOTE_APP_DIR }}
            MINECRAFT_DIR: ${{ secrets.MINECRAFT_DIR }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
            GIT_REPO: ${{ steps.prep.outputs.repo_ssh }}
            GIT_BRANCH: ${{ steps.prep.outputs.branch }}
          script: |
            set -euxo pipefail

            # Defaults for directories if not provided
            REMOTE_APP_DIR="${REMOTE_APP_DIR:-/opt/minecraft/app}"
            MINECRAFT_DIR="${MINECRAFT_DIR:-/opt/minecraft/server}"

            # Defaults for databases if not provided
            POSTGRES_USER="${POSTGRES_USER:-minecraft}"
            POSTGRES_DB="${POSTGRES_DB:-minecraft}"
            if [ -z "${POSTGRES_PASSWORD:-}" ]; then
              echo "POSTGRES_PASSWORD secret is required" >&2
              exit 1
            fi

            # Ensure base tools
            if ! command -v git >/dev/null 2>&1; then
              if command -v apt-get >/dev/null 2>&1; then
                sudo apt-get update -y
                sudo apt-get install -y git curl
              elif command -v yum >/dev/null 2>&1; then
                sudo yum install -y git curl
              elif command -v dnf >/dev/null 2>&1; then
                sudo dnf install -y git curl
              else
                echo "Unsupported package manager. Please install git manually." >&2
                exit 1
              fi
            fi

            # Ensure Docker
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo systemctl enable docker || true
              sudo systemctl start docker || true
            fi

            # Create directories
            sudo mkdir -p "$REMOTE_APP_DIR" "$MINECRAFT_DIR"
            sudo chown -R "$USER":"$USER" "$REMOTE_APP_DIR" "$MINECRAFT_DIR"

            # Clone or update repository on remote
            if [ ! -d "$REMOTE_APP_DIR/.git" ]; then
              git clone "$GIT_REPO" "$REMOTE_APP_DIR"
            fi
            cd "$REMOTE_APP_DIR"
            git fetch --all --prune
            git checkout -q "$GIT_BRANCH" || git checkout -q -b "$GIT_BRANCH" "origin/$GIT_BRANCH"
            git reset --hard "origin/$GIT_BRANCH"

            # Make sure the deploy script is executable
            chmod +x scripts/remote_deploy.sh

            # Export envs for the script and run
            export REMOTE_APP_DIR MINECRAFT_DIR POSTGRES_USER POSTGRES_DB POSTGRES_PASSWORD REDIS_PASSWORD
            ./scripts/remote_deploy.sh
